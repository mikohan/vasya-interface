[{"/home/manhee/Projects/Sandbox/React/vasya-interface/src/App.tsx":"1","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/AppBar.tsx":"2","/home/manhee/Projects/Sandbox/React/vasya-interface/src/index.tsx":"3","/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/reducers.ts":"4","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/ReactDataGrid.tsx":"5","/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/index.ts":"6","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/TestPage.tsx":"7","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/MainTable.tsx":"8","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/RowForm.tsx":"9","/home/manhee/Projects/Sandbox/React/vasya-interface/src/config.ts":"10","/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/types.ts":"11","/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/actions.ts":"12","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/TableRow.tsx":"13"},{"size":638,"mtime":1607422713121,"results":"14","hashOfConfig":"15"},{"size":1317,"mtime":1607421742621,"results":"16","hashOfConfig":"15"},{"size":617,"mtime":1607422168145,"results":"17","hashOfConfig":"15"},{"size":1634,"mtime":1607523758391,"results":"18","hashOfConfig":"15"},{"size":1183,"mtime":1607419604932,"results":"19","hashOfConfig":"15"},{"size":287,"mtime":1607415894327,"results":"20","hashOfConfig":"15"},{"size":3527,"mtime":1607522079773,"results":"21","hashOfConfig":"15"},{"size":4273,"mtime":1607525581758,"results":"22","hashOfConfig":"15"},{"size":5908,"mtime":1607510129709,"results":"23","hashOfConfig":"15"},{"size":811,"mtime":1607522008209,"results":"24","hashOfConfig":"15"},{"size":445,"mtime":1607523578985,"results":"25","hashOfConfig":"15"},{"size":2800,"mtime":1607523907172,"results":"26","hashOfConfig":"15"},{"size":881,"mtime":1607524795967,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kmhl1x",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manhee/Projects/Sandbox/React/vasya-interface/src/App.tsx",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/AppBar.tsx",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/index.tsx",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/reducers.ts",["55"],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/ReactDataGrid.tsx",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/index.ts",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/TestPage.tsx",["56","57","58","59"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport TableRowComponent from './TableRow';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRow } from '../interfaces';\nimport { Button, Grid } from '@material-ui/core';\nimport { setOneCIdAction, toggleDone } from '../store/actions';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 650,\n    },\n    topRowNumber: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport default function TestPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [oneCId, setOneCId] = useState<number>(0);\n\n  const rowsInWork: IRow[] = useSelector((state: any) => {\n    return state.mainState.rowsInWork;\n  });\n\n  const handleChangeOneC = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value);\n    const newValue = isNaN(value) ? 0 : value;\n    setOneCId(newValue);\n  };\n\n  const handleOneCBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    console.log('On blur occurs', event.target.value);\n  };\n\n  const handleAddNewRow = () => {\n    console.log('Add new row here');\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={2}>\n          <TextField\n            label=\"1C ID\"\n            variant=\"outlined\"\n            value={oneCId}\n            onChange={handleChangeOneC}\n            onBlur={handleOneCBlur}\n            size=\"small\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <Fab\n            onClick={handleAddNewRow}\n            color=\"primary\"\n            size=\"small\"\n            aria-label=\"add\"\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Grid item xs={2}>\n          <Typography variant=\"h6\">{oneCId}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Dessert (100g serving)</TableCell>\n                  <TableCell align=\"right\">Calories</TableCell>\n                  <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                  <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                  <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                  <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                  <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rowsInWork.map((row: IRow) => (\n                  <TableRowComponent key={row.uuid} myRow={row} />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/MainTable.tsx",["60","61"],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/RowForm.tsx",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/config.ts",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/types.ts",[],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/store/actions.ts",["62"],"/home/manhee/Projects/Sandbox/React/vasya-interface/src/components/TableRow.tsx",[],{"ruleId":"63","severity":1,"message":"64","line":3,"column":20,"nodeType":"65","messageId":"66","endLine":3,"endColumn":30},{"ruleId":"63","severity":1,"message":"67","line":14,"column":10,"nodeType":"65","messageId":"66","endLine":14,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":15,"column":10,"nodeType":"65","messageId":"66","endLine":15,"endColumn":25},{"ruleId":"63","severity":1,"message":"69","line":15,"column":27,"nodeType":"65","messageId":"66","endLine":15,"endColumn":37},{"ruleId":"63","severity":1,"message":"70","line":34,"column":9,"nodeType":"65","messageId":"66","endLine":34,"endColumn":17},{"ruleId":"63","severity":1,"message":"71","line":42,"column":9,"nodeType":"65","messageId":"66","endLine":42,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":59,"column":6,"nodeType":"74","endLine":59,"endColumn":8,"suggestions":"75"},{"ruleId":"63","severity":1,"message":"76","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":23},"@typescript-eslint/no-unused-vars","'ISetOneCId' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'setOneCIdAction' is defined but never used.","'toggleDone' is defined but never used.","'dispatch' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'initRow' is defined but never used.",{"desc":"78","fix":"79"},"Update the dependencies array to be: [dispatch]",{"range":"80","text":"81"},[1904,1906],"[dispatch]"]